name: Deploy Serverless Lambda from main branch

permissions:
  id-token: write
  contents: read # This is required for actions/checkout
  pull-requests: write

on:
  push:
    branches:
      - main
    paths:
      - docker-deployment/**
  

jobs:
  deploy_serverless:
    name: deploy_serverless_function
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docker-deployment
    strategy:
      matrix:
        node-version: []
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        # cache: "pip" # caching pip dependencies

    # Comment out, see if it works
    # - name: Use Node.js 18.x
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: "18.x"
    # - run: npm ci

    # Set up AWS Credentials
    - name: Source Environment Variables
      id: dotenv
      uses: falti/dotenv-action@v1.0.4
      with:
        path: ".github/workflows/.env"

    - name: Set Environment Variables
      uses: c-py/action-dotenv-to-setenv@v5
      with:
        env-file: ".github/workflows/.env"

    - name: Configure AWS Credentials for creating resources
      #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ steps.dotenv.outputs.aws_account_id }}:role/${{ steps.dotenv.outputs.aws_workflow_role }}
        role-session-name: ${{ github.actor }}_${{ github.job }}
        aws-region: ${{ steps.dotenv.outputs.aws_region }}

    # Run Serverless Deploy
    - name: install serverless
      run: npm install -g serverless@3.38.0
    - name: serverless deploy
      run: sls deploy --verbose --force
